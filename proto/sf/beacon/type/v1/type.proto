syntax = "proto3";

option go_package = "github.com/pinax-network/firehose-beacon/pb/sf/beacon/type/v1;pbbeacon";

package sf.beacon.type.v1;

enum Spec {
  UNSPECIFIED = 0;
  PHASE0 = 1;
  ALTAIR = 2;
  BELLATRIX = 3;
  CAPELLA = 4;
  DENEB = 5;
}

message Block {

  Spec spec = 1;
  uint64 slot = 2;
  uint64 parent_slot = 3;
  string root = 4;
  string parent_root = 5;
  string state_root = 6;
  uint64 proposer_index = 7;

  oneof Body {
    // Phase0Body phase0 = 20;
    // AltrairBody altrair = 21;
    // BellatrixBody bellatrix = 22;
    // CapellaBody capelly = 23;
    DenebBody deneb = 25;
  }
}

message Phase0Body {
  string rando_reveal = 1;
  Eth1Data eth1_data = 2;
  string graffiti = 3;
  ProposerSlashing proposer_slashing = 4;
}

message DenebBody {
  string rando_reveal = 1;
  Eth1Data eth1_data = 2;
  string graffiti = 3;
  repeated ProposerSlashing proposer_slashings = 4;
  repeated AttesterSlashing attester_slashings = 5;
  repeated Attestation attestations = 6;
  repeated Deposit deposits = 7;
  repeated SignedVoluntaryExit voluntary_exits = 8;

  repeated Blob blobs = 15;
}

message Eth1Data {
  string deposit_root = 1;
  uint64 deposit_count = 2;
  string block_hash = 3;
}

message ProposerSlashing {
  SignedBeaconBlockHeader signed_header_1 = 1;
  SignedBeaconBlockHeader signed_header_2 = 2;
}

message AttesterSlashing {
  IndexedAttestation attestation_1 = 1;
  IndexedAttestation attestation_2 = 2;
}

message Attestation {
  string aggregation_bits = 1;
  AttestationData data = 2;
  string signature = 3;
}

message Deposit {
  // todo Proof [][]byte
  DepositData data = 2;
}

message SignedVoluntaryExit {
  VoluntaryExit message = 1;
  string signature = 2;
}

message VoluntaryExit {
  uint64 epoch = 1;
  uint64 validator_index = 2;
}

message DepositData {
  string public_key = 1;
  bytes withdrawal_credentials = 2;
  uint64 gwei = 3;
  string signature = 4;
}

message IndexedAttestation {
  repeated uint64 attesting_indices = 1;
  AttestationData data = 2;
  string signature = 3;
}

message AttestationData {
  uint64 slot = 1;
  uint64 committee_index = 2;
  string beacon_block_root = 3;
  Checkpoint source = 4;
  Checkpoint target = 5;
}

message Checkpoint {
  uint64 epoch = 1;
  string root = 2;
}

message SignedBeaconBlockHeader {
  BeaconBlockHeader message = 1;
  string Signature = 2;
}

message BeaconBlockHeader {
  uint64 slot = 1;
  uint64 proposer_index = 2;
  string parent_root = 3;
  string state_root = 4;
  string body_root = 5;
}

message Blob {
  uint64 index = 1;
  bytes blob = 2;
  string kzg_commitment = 3;
  string kzg_proof = 4;
  string kzg_commitment_inclusion_proof = 5;
}
