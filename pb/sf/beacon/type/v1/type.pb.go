// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.3
// source: sf/beacon/type/v1/type.proto

package pbbeacon

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Spec int32

const (
	Spec_UNSPECIFIED Spec = 0
	Spec_PHASE0      Spec = 1
	Spec_ALTAIR      Spec = 2
	Spec_BELLATRIX   Spec = 3
	Spec_CAPELLA     Spec = 4
	Spec_DENEB       Spec = 5
)

// Enum value maps for Spec.
var (
	Spec_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "PHASE0",
		2: "ALTAIR",
		3: "BELLATRIX",
		4: "CAPELLA",
		5: "DENEB",
	}
	Spec_value = map[string]int32{
		"UNSPECIFIED": 0,
		"PHASE0":      1,
		"ALTAIR":      2,
		"BELLATRIX":   3,
		"CAPELLA":     4,
		"DENEB":       5,
	}
)

func (x Spec) Enum() *Spec {
	p := new(Spec)
	*p = x
	return p
}

func (x Spec) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Spec) Descriptor() protoreflect.EnumDescriptor {
	return file_sf_beacon_type_v1_type_proto_enumTypes[0].Descriptor()
}

func (Spec) Type() protoreflect.EnumType {
	return &file_sf_beacon_type_v1_type_proto_enumTypes[0]
}

func (x Spec) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Spec.Descriptor instead.
func (Spec) EnumDescriptor() ([]byte, []int) {
	return file_sf_beacon_type_v1_type_proto_rawDescGZIP(), []int{0}
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec          Spec   `protobuf:"varint,1,opt,name=spec,proto3,enum=sf.beacon.type.v1.Spec" json:"spec,omitempty"`
	Slot          uint64 `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	ParentSlot    uint64 `protobuf:"varint,3,opt,name=parent_slot,json=parentSlot,proto3" json:"parent_slot,omitempty"`
	Root          string `protobuf:"bytes,4,opt,name=root,proto3" json:"root,omitempty"`
	ParentRoot    string `protobuf:"bytes,5,opt,name=parent_root,json=parentRoot,proto3" json:"parent_root,omitempty"`
	StateRoot     string `protobuf:"bytes,6,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty"`
	ProposerIndex uint64 `protobuf:"varint,7,opt,name=proposer_index,json=proposerIndex,proto3" json:"proposer_index,omitempty"`
	// Types that are assignable to Body:
	//
	//	*Block_Phase0
	//	*Block_Deneb
	Body  isBlock_Body `protobuf_oneof:"Body"`
	Blobs []*Blob      `protobuf:"bytes,30,rep,name=blobs,proto3" json:"blobs,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_beacon_type_v1_type_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_sf_beacon_type_v1_type_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_sf_beacon_type_v1_type_proto_rawDescGZIP(), []int{0}
}

func (x *Block) GetSpec() Spec {
	if x != nil {
		return x.Spec
	}
	return Spec_UNSPECIFIED
}

func (x *Block) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *Block) GetParentSlot() uint64 {
	if x != nil {
		return x.ParentSlot
	}
	return 0
}

func (x *Block) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

func (x *Block) GetParentRoot() string {
	if x != nil {
		return x.ParentRoot
	}
	return ""
}

func (x *Block) GetStateRoot() string {
	if x != nil {
		return x.StateRoot
	}
	return ""
}

func (x *Block) GetProposerIndex() uint64 {
	if x != nil {
		return x.ProposerIndex
	}
	return 0
}

func (m *Block) GetBody() isBlock_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *Block) GetPhase0() *Phase0Body {
	if x, ok := x.GetBody().(*Block_Phase0); ok {
		return x.Phase0
	}
	return nil
}

func (x *Block) GetDeneb() *DenebBody {
	if x, ok := x.GetBody().(*Block_Deneb); ok {
		return x.Deneb
	}
	return nil
}

func (x *Block) GetBlobs() []*Blob {
	if x != nil {
		return x.Blobs
	}
	return nil
}

type isBlock_Body interface {
	isBlock_Body()
}

type Block_Phase0 struct {
	Phase0 *Phase0Body `protobuf:"bytes,20,opt,name=phase0,proto3,oneof"`
}

type Block_Deneb struct {
	Deneb *DenebBody `protobuf:"bytes,25,opt,name=deneb,proto3,oneof"`
}

func (*Block_Phase0) isBlock_Body() {}

func (*Block_Deneb) isBlock_Body() {}

type Phase0Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RandoReveal      string            `protobuf:"bytes,1,opt,name=rando_reveal,json=randoReveal,proto3" json:"rando_reveal,omitempty"`
	Eth1Data         *Eth1Data         `protobuf:"bytes,2,opt,name=eth1_data,json=eth1Data,proto3" json:"eth1_data,omitempty"`
	Graffiti         string            `protobuf:"bytes,3,opt,name=graffiti,proto3" json:"graffiti,omitempty"`
	ProposerSlashing *ProposerSlashing `protobuf:"bytes,4,opt,name=proposer_slashing,json=proposerSlashing,proto3" json:"proposer_slashing,omitempty"`
}

func (x *Phase0Body) Reset() {
	*x = Phase0Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_beacon_type_v1_type_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Phase0Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Phase0Body) ProtoMessage() {}

func (x *Phase0Body) ProtoReflect() protoreflect.Message {
	mi := &file_sf_beacon_type_v1_type_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Phase0Body.ProtoReflect.Descriptor instead.
func (*Phase0Body) Descriptor() ([]byte, []int) {
	return file_sf_beacon_type_v1_type_proto_rawDescGZIP(), []int{1}
}

func (x *Phase0Body) GetRandoReveal() string {
	if x != nil {
		return x.RandoReveal
	}
	return ""
}

func (x *Phase0Body) GetEth1Data() *Eth1Data {
	if x != nil {
		return x.Eth1Data
	}
	return nil
}

func (x *Phase0Body) GetGraffiti() string {
	if x != nil {
		return x.Graffiti
	}
	return ""
}

func (x *Phase0Body) GetProposerSlashing() *ProposerSlashing {
	if x != nil {
		return x.ProposerSlashing
	}
	return nil
}

type DenebBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RandoReveal       string              `protobuf:"bytes,1,opt,name=rando_reveal,json=randoReveal,proto3" json:"rando_reveal,omitempty"`
	Eth1Data          *Eth1Data           `protobuf:"bytes,2,opt,name=eth1_data,json=eth1Data,proto3" json:"eth1_data,omitempty"`
	Graffiti          string              `protobuf:"bytes,3,opt,name=graffiti,proto3" json:"graffiti,omitempty"`
	ProposerSlashings []*ProposerSlashing `protobuf:"bytes,4,rep,name=proposer_slashings,json=proposerSlashings,proto3" json:"proposer_slashings,omitempty"`
	AttesterSlashings []*AttesterSlashing `protobuf:"bytes,5,rep,name=attester_slashings,json=attesterSlashings,proto3" json:"attester_slashings,omitempty"`
}

func (x *DenebBody) Reset() {
	*x = DenebBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_beacon_type_v1_type_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DenebBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DenebBody) ProtoMessage() {}

func (x *DenebBody) ProtoReflect() protoreflect.Message {
	mi := &file_sf_beacon_type_v1_type_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DenebBody.ProtoReflect.Descriptor instead.
func (*DenebBody) Descriptor() ([]byte, []int) {
	return file_sf_beacon_type_v1_type_proto_rawDescGZIP(), []int{2}
}

func (x *DenebBody) GetRandoReveal() string {
	if x != nil {
		return x.RandoReveal
	}
	return ""
}

func (x *DenebBody) GetEth1Data() *Eth1Data {
	if x != nil {
		return x.Eth1Data
	}
	return nil
}

func (x *DenebBody) GetGraffiti() string {
	if x != nil {
		return x.Graffiti
	}
	return ""
}

func (x *DenebBody) GetProposerSlashings() []*ProposerSlashing {
	if x != nil {
		return x.ProposerSlashings
	}
	return nil
}

func (x *DenebBody) GetAttesterSlashings() []*AttesterSlashing {
	if x != nil {
		return x.AttesterSlashings
	}
	return nil
}

type Eth1Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositRoot  string `protobuf:"bytes,1,opt,name=deposit_root,json=depositRoot,proto3" json:"deposit_root,omitempty"`
	DepositCount uint64 `protobuf:"varint,2,opt,name=deposit_count,json=depositCount,proto3" json:"deposit_count,omitempty"`
	BlockHash    string `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
}

func (x *Eth1Data) Reset() {
	*x = Eth1Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_beacon_type_v1_type_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Eth1Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Eth1Data) ProtoMessage() {}

func (x *Eth1Data) ProtoReflect() protoreflect.Message {
	mi := &file_sf_beacon_type_v1_type_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Eth1Data.ProtoReflect.Descriptor instead.
func (*Eth1Data) Descriptor() ([]byte, []int) {
	return file_sf_beacon_type_v1_type_proto_rawDescGZIP(), []int{3}
}

func (x *Eth1Data) GetDepositRoot() string {
	if x != nil {
		return x.DepositRoot
	}
	return ""
}

func (x *Eth1Data) GetDepositCount() uint64 {
	if x != nil {
		return x.DepositCount
	}
	return 0
}

func (x *Eth1Data) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

type ProposerSlashing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedHeader_1 *SignedBeaconBlockHeader `protobuf:"bytes,1,opt,name=signed_header_1,json=signedHeader1,proto3" json:"signed_header_1,omitempty"`
	SignedHeader_2 *SignedBeaconBlockHeader `protobuf:"bytes,2,opt,name=signed_header_2,json=signedHeader2,proto3" json:"signed_header_2,omitempty"`
}

func (x *ProposerSlashing) Reset() {
	*x = ProposerSlashing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_beacon_type_v1_type_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposerSlashing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposerSlashing) ProtoMessage() {}

func (x *ProposerSlashing) ProtoReflect() protoreflect.Message {
	mi := &file_sf_beacon_type_v1_type_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposerSlashing.ProtoReflect.Descriptor instead.
func (*ProposerSlashing) Descriptor() ([]byte, []int) {
	return file_sf_beacon_type_v1_type_proto_rawDescGZIP(), []int{4}
}

func (x *ProposerSlashing) GetSignedHeader_1() *SignedBeaconBlockHeader {
	if x != nil {
		return x.SignedHeader_1
	}
	return nil
}

func (x *ProposerSlashing) GetSignedHeader_2() *SignedBeaconBlockHeader {
	if x != nil {
		return x.SignedHeader_2
	}
	return nil
}

type AttesterSlashing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attestation_1 *IndexedAttestation `protobuf:"bytes,1,opt,name=attestation_1,json=attestation1,proto3" json:"attestation_1,omitempty"`
	Attestation_2 *IndexedAttestation `protobuf:"bytes,2,opt,name=attestation_2,json=attestation2,proto3" json:"attestation_2,omitempty"`
}

func (x *AttesterSlashing) Reset() {
	*x = AttesterSlashing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_beacon_type_v1_type_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttesterSlashing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttesterSlashing) ProtoMessage() {}

func (x *AttesterSlashing) ProtoReflect() protoreflect.Message {
	mi := &file_sf_beacon_type_v1_type_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttesterSlashing.ProtoReflect.Descriptor instead.
func (*AttesterSlashing) Descriptor() ([]byte, []int) {
	return file_sf_beacon_type_v1_type_proto_rawDescGZIP(), []int{5}
}

func (x *AttesterSlashing) GetAttestation_1() *IndexedAttestation {
	if x != nil {
		return x.Attestation_1
	}
	return nil
}

func (x *AttesterSlashing) GetAttestation_2() *IndexedAttestation {
	if x != nil {
		return x.Attestation_2
	}
	return nil
}

type IndexedAttestation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttestingIndices []uint64         `protobuf:"varint,1,rep,packed,name=attesting_indices,json=attestingIndices,proto3" json:"attesting_indices,omitempty"`
	Data             *AttestationData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Signature        string           `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *IndexedAttestation) Reset() {
	*x = IndexedAttestation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_beacon_type_v1_type_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexedAttestation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexedAttestation) ProtoMessage() {}

func (x *IndexedAttestation) ProtoReflect() protoreflect.Message {
	mi := &file_sf_beacon_type_v1_type_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexedAttestation.ProtoReflect.Descriptor instead.
func (*IndexedAttestation) Descriptor() ([]byte, []int) {
	return file_sf_beacon_type_v1_type_proto_rawDescGZIP(), []int{6}
}

func (x *IndexedAttestation) GetAttestingIndices() []uint64 {
	if x != nil {
		return x.AttestingIndices
	}
	return nil
}

func (x *IndexedAttestation) GetData() *AttestationData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *IndexedAttestation) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type AttestationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot            uint64      `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	CommitteeIndex  uint64      `protobuf:"varint,2,opt,name=committee_index,json=committeeIndex,proto3" json:"committee_index,omitempty"`
	BeaconBlockRoot string      `protobuf:"bytes,3,opt,name=beacon_block_root,json=beaconBlockRoot,proto3" json:"beacon_block_root,omitempty"`
	Source          *Checkpoint `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	Target          *Checkpoint `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *AttestationData) Reset() {
	*x = AttestationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_beacon_type_v1_type_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttestationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationData) ProtoMessage() {}

func (x *AttestationData) ProtoReflect() protoreflect.Message {
	mi := &file_sf_beacon_type_v1_type_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationData.ProtoReflect.Descriptor instead.
func (*AttestationData) Descriptor() ([]byte, []int) {
	return file_sf_beacon_type_v1_type_proto_rawDescGZIP(), []int{7}
}

func (x *AttestationData) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *AttestationData) GetCommitteeIndex() uint64 {
	if x != nil {
		return x.CommitteeIndex
	}
	return 0
}

func (x *AttestationData) GetBeaconBlockRoot() string {
	if x != nil {
		return x.BeaconBlockRoot
	}
	return ""
}

func (x *AttestationData) GetSource() *Checkpoint {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *AttestationData) GetTarget() *Checkpoint {
	if x != nil {
		return x.Target
	}
	return nil
}

type Checkpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch uint64 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Root  string `protobuf:"bytes,2,opt,name=root,proto3" json:"root,omitempty"`
}

func (x *Checkpoint) Reset() {
	*x = Checkpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_beacon_type_v1_type_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Checkpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Checkpoint) ProtoMessage() {}

func (x *Checkpoint) ProtoReflect() protoreflect.Message {
	mi := &file_sf_beacon_type_v1_type_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Checkpoint.ProtoReflect.Descriptor instead.
func (*Checkpoint) Descriptor() ([]byte, []int) {
	return file_sf_beacon_type_v1_type_proto_rawDescGZIP(), []int{8}
}

func (x *Checkpoint) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *Checkpoint) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

type SignedBeaconBlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message   *BeaconBlockHeader `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Signature string             `protobuf:"bytes,2,opt,name=Signature,proto3" json:"Signature,omitempty"`
}

func (x *SignedBeaconBlockHeader) Reset() {
	*x = SignedBeaconBlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_beacon_type_v1_type_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedBeaconBlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedBeaconBlockHeader) ProtoMessage() {}

func (x *SignedBeaconBlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_sf_beacon_type_v1_type_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedBeaconBlockHeader.ProtoReflect.Descriptor instead.
func (*SignedBeaconBlockHeader) Descriptor() ([]byte, []int) {
	return file_sf_beacon_type_v1_type_proto_rawDescGZIP(), []int{9}
}

func (x *SignedBeaconBlockHeader) GetMessage() *BeaconBlockHeader {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *SignedBeaconBlockHeader) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type BeaconBlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot          uint64 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	ProposerIndex uint64 `protobuf:"varint,2,opt,name=proposer_index,json=proposerIndex,proto3" json:"proposer_index,omitempty"`
	ParentRoot    string `protobuf:"bytes,3,opt,name=parent_root,json=parentRoot,proto3" json:"parent_root,omitempty"`
	StateRoot     string `protobuf:"bytes,4,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty"`
	BodyRoot      string `protobuf:"bytes,5,opt,name=body_root,json=bodyRoot,proto3" json:"body_root,omitempty"`
}

func (x *BeaconBlockHeader) Reset() {
	*x = BeaconBlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_beacon_type_v1_type_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconBlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconBlockHeader) ProtoMessage() {}

func (x *BeaconBlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_sf_beacon_type_v1_type_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconBlockHeader.ProtoReflect.Descriptor instead.
func (*BeaconBlockHeader) Descriptor() ([]byte, []int) {
	return file_sf_beacon_type_v1_type_proto_rawDescGZIP(), []int{10}
}

func (x *BeaconBlockHeader) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *BeaconBlockHeader) GetProposerIndex() uint64 {
	if x != nil {
		return x.ProposerIndex
	}
	return 0
}

func (x *BeaconBlockHeader) GetParentRoot() string {
	if x != nil {
		return x.ParentRoot
	}
	return ""
}

func (x *BeaconBlockHeader) GetStateRoot() string {
	if x != nil {
		return x.StateRoot
	}
	return ""
}

func (x *BeaconBlockHeader) GetBodyRoot() string {
	if x != nil {
		return x.BodyRoot
	}
	return ""
}

type Blob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index                       uint64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Blob                        []byte `protobuf:"bytes,2,opt,name=blob,proto3" json:"blob,omitempty"`
	KzgCommitment               string `protobuf:"bytes,3,opt,name=kzg_commitment,json=kzgCommitment,proto3" json:"kzg_commitment,omitempty"`
	KzgProof                    string `protobuf:"bytes,4,opt,name=kzg_proof,json=kzgProof,proto3" json:"kzg_proof,omitempty"`
	KzgCommitmentInclusionProof string `protobuf:"bytes,5,opt,name=kzg_commitment_inclusion_proof,json=kzgCommitmentInclusionProof,proto3" json:"kzg_commitment_inclusion_proof,omitempty"`
}

func (x *Blob) Reset() {
	*x = Blob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_beacon_type_v1_type_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blob) ProtoMessage() {}

func (x *Blob) ProtoReflect() protoreflect.Message {
	mi := &file_sf_beacon_type_v1_type_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blob.ProtoReflect.Descriptor instead.
func (*Blob) Descriptor() ([]byte, []int) {
	return file_sf_beacon_type_v1_type_proto_rawDescGZIP(), []int{11}
}

func (x *Blob) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Blob) GetBlob() []byte {
	if x != nil {
		return x.Blob
	}
	return nil
}

func (x *Blob) GetKzgCommitment() string {
	if x != nil {
		return x.KzgCommitment
	}
	return ""
}

func (x *Blob) GetKzgProof() string {
	if x != nil {
		return x.KzgProof
	}
	return ""
}

func (x *Blob) GetKzgCommitmentInclusionProof() string {
	if x != nil {
		return x.KzgCommitmentInclusionProof
	}
	return ""
}

var File_sf_beacon_type_v1_type_proto protoreflect.FileDescriptor

var file_sf_beacon_type_v1_type_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x66, 0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11,
	0x73, 0x66, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76,
	0x31, 0x22, 0x8a, 0x03, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2b, 0x0a, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x73, 0x66, 0x2e, 0x62,
	0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x6f,
	0x6f, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x37, 0x0a, 0x06, 0x70, 0x68, 0x61, 0x73,
	0x65, 0x30, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x66, 0x2e, 0x62, 0x65,
	0x61, 0x63, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x30, 0x42, 0x6f, 0x64, 0x79, 0x48, 0x00, 0x52, 0x06, 0x70, 0x68, 0x61, 0x73, 0x65,
	0x30, 0x12, 0x34, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x65, 0x62, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x73, 0x66, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6e, 0x65, 0x62, 0x42, 0x6f, 0x64, 0x79, 0x48, 0x00,
	0x52, 0x05, 0x64, 0x65, 0x6e, 0x65, 0x62, 0x12, 0x2d, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x62, 0x73,
	0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x66, 0x2e, 0x62, 0x65, 0x61, 0x63,
	0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x52,
	0x05, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x22, 0xd7,
	0x01, 0x0a, 0x0a, 0x50, 0x68, 0x61, 0x73, 0x65, 0x30, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c,
	0x12, 0x38, 0x0a, 0x09, 0x65, 0x74, 0x68, 0x31, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x66, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x74, 0x68, 0x31, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x65, 0x74, 0x68, 0x31, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x74, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x74, 0x69, 0x12, 0x50, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x73, 0x66, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x53, 0x6c,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72,
	0x53, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x22, 0xac, 0x02, 0x0a, 0x09, 0x44, 0x65, 0x6e,
	0x65, 0x62, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x5f,
	0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x61,
	0x6e, 0x64, 0x6f, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x09, 0x65, 0x74, 0x68,
	0x31, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73,
	0x66, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x74, 0x68, 0x31, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x65, 0x74, 0x68, 0x31, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x66, 0x66, 0x69, 0x74, 0x69, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x61, 0x66, 0x66, 0x69, 0x74, 0x69, 0x12,
	0x52, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x66,
	0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x52, 0x11, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x52, 0x0a, 0x12, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x73, 0x66, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x52, 0x11, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x6c,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x71, 0x0a, 0x08, 0x45, 0x74, 0x68, 0x31, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x72,
	0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x22, 0xba, 0x01, 0x0a, 0x10, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x12,
	0x52, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x66, 0x2e, 0x62, 0x65,
	0x61, 0x63, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x31, 0x12, 0x52, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x5f, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73,
	0x66, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x32, 0x22, 0xaa, 0x01, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x4a, 0x0a, 0x0d,
	0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x66, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x41,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x12, 0x4a, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x73, 0x66, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x41, 0x74, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x32, 0x22, 0x97, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64,
	0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x61,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x10, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x66, 0x2e, 0x62, 0x65, 0x61, 0x63,
	0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xe8,
	0x01, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x2a, 0x0a, 0x11, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x65, 0x61, 0x63,
	0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x66,
	0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x66, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x36, 0x0a, 0x0a, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f,
	0x74, 0x22, 0x77, 0x0a, 0x17, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x65, 0x61, 0x63, 0x6f,
	0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x73, 0x66, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x11, 0x42,
	0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x73, 0x6c, 0x6f, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x6f, 0x64, 0x79, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x6f, 0x64, 0x79, 0x52, 0x6f, 0x6f, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x04, 0x42, 0x6c, 0x6f,
	0x62, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x12, 0x25, 0x0a, 0x0e, 0x6b,
	0x7a, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x7a, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x7a, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x7a, 0x67, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12,
	0x43, 0x0a, 0x1e, 0x6b, 0x7a, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x6b, 0x7a, 0x67, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x2a, 0x56, 0x0a, 0x04, 0x53, 0x70, 0x65, 0x63, 0x12, 0x0f, 0x0a, 0x0b,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x50, 0x48, 0x41, 0x53, 0x45, 0x30, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x4c, 0x54,
	0x41, 0x49, 0x52, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x45, 0x4c, 0x4c, 0x41, 0x54, 0x52,
	0x49, 0x58, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x41, 0x50, 0x45, 0x4c, 0x4c, 0x41, 0x10,
	0x04, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x4e, 0x45, 0x42, 0x10, 0x05, 0x42, 0x48, 0x5a, 0x46,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x69, 0x6e, 0x61, 0x78,
	0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x66, 0x69, 0x72, 0x65, 0x68, 0x6f, 0x73,
	0x65, 0x2d, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x66, 0x2f, 0x62,
	0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x62,
	0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sf_beacon_type_v1_type_proto_rawDescOnce sync.Once
	file_sf_beacon_type_v1_type_proto_rawDescData = file_sf_beacon_type_v1_type_proto_rawDesc
)

func file_sf_beacon_type_v1_type_proto_rawDescGZIP() []byte {
	file_sf_beacon_type_v1_type_proto_rawDescOnce.Do(func() {
		file_sf_beacon_type_v1_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_sf_beacon_type_v1_type_proto_rawDescData)
	})
	return file_sf_beacon_type_v1_type_proto_rawDescData
}

var file_sf_beacon_type_v1_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sf_beacon_type_v1_type_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_sf_beacon_type_v1_type_proto_goTypes = []interface{}{
	(Spec)(0),                       // 0: sf.beacon.type.v1.Spec
	(*Block)(nil),                   // 1: sf.beacon.type.v1.Block
	(*Phase0Body)(nil),              // 2: sf.beacon.type.v1.Phase0Body
	(*DenebBody)(nil),               // 3: sf.beacon.type.v1.DenebBody
	(*Eth1Data)(nil),                // 4: sf.beacon.type.v1.Eth1Data
	(*ProposerSlashing)(nil),        // 5: sf.beacon.type.v1.ProposerSlashing
	(*AttesterSlashing)(nil),        // 6: sf.beacon.type.v1.AttesterSlashing
	(*IndexedAttestation)(nil),      // 7: sf.beacon.type.v1.IndexedAttestation
	(*AttestationData)(nil),         // 8: sf.beacon.type.v1.AttestationData
	(*Checkpoint)(nil),              // 9: sf.beacon.type.v1.Checkpoint
	(*SignedBeaconBlockHeader)(nil), // 10: sf.beacon.type.v1.SignedBeaconBlockHeader
	(*BeaconBlockHeader)(nil),       // 11: sf.beacon.type.v1.BeaconBlockHeader
	(*Blob)(nil),                    // 12: sf.beacon.type.v1.Blob
}
var file_sf_beacon_type_v1_type_proto_depIdxs = []int32{
	0,  // 0: sf.beacon.type.v1.Block.spec:type_name -> sf.beacon.type.v1.Spec
	2,  // 1: sf.beacon.type.v1.Block.phase0:type_name -> sf.beacon.type.v1.Phase0Body
	3,  // 2: sf.beacon.type.v1.Block.deneb:type_name -> sf.beacon.type.v1.DenebBody
	12, // 3: sf.beacon.type.v1.Block.blobs:type_name -> sf.beacon.type.v1.Blob
	4,  // 4: sf.beacon.type.v1.Phase0Body.eth1_data:type_name -> sf.beacon.type.v1.Eth1Data
	5,  // 5: sf.beacon.type.v1.Phase0Body.proposer_slashing:type_name -> sf.beacon.type.v1.ProposerSlashing
	4,  // 6: sf.beacon.type.v1.DenebBody.eth1_data:type_name -> sf.beacon.type.v1.Eth1Data
	5,  // 7: sf.beacon.type.v1.DenebBody.proposer_slashings:type_name -> sf.beacon.type.v1.ProposerSlashing
	6,  // 8: sf.beacon.type.v1.DenebBody.attester_slashings:type_name -> sf.beacon.type.v1.AttesterSlashing
	10, // 9: sf.beacon.type.v1.ProposerSlashing.signed_header_1:type_name -> sf.beacon.type.v1.SignedBeaconBlockHeader
	10, // 10: sf.beacon.type.v1.ProposerSlashing.signed_header_2:type_name -> sf.beacon.type.v1.SignedBeaconBlockHeader
	7,  // 11: sf.beacon.type.v1.AttesterSlashing.attestation_1:type_name -> sf.beacon.type.v1.IndexedAttestation
	7,  // 12: sf.beacon.type.v1.AttesterSlashing.attestation_2:type_name -> sf.beacon.type.v1.IndexedAttestation
	8,  // 13: sf.beacon.type.v1.IndexedAttestation.data:type_name -> sf.beacon.type.v1.AttestationData
	9,  // 14: sf.beacon.type.v1.AttestationData.source:type_name -> sf.beacon.type.v1.Checkpoint
	9,  // 15: sf.beacon.type.v1.AttestationData.target:type_name -> sf.beacon.type.v1.Checkpoint
	11, // 16: sf.beacon.type.v1.SignedBeaconBlockHeader.message:type_name -> sf.beacon.type.v1.BeaconBlockHeader
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_sf_beacon_type_v1_type_proto_init() }
func file_sf_beacon_type_v1_type_proto_init() {
	if File_sf_beacon_type_v1_type_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sf_beacon_type_v1_type_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_beacon_type_v1_type_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Phase0Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_beacon_type_v1_type_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DenebBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_beacon_type_v1_type_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Eth1Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_beacon_type_v1_type_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposerSlashing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_beacon_type_v1_type_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttesterSlashing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_beacon_type_v1_type_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexedAttestation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_beacon_type_v1_type_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttestationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_beacon_type_v1_type_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Checkpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_beacon_type_v1_type_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedBeaconBlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_beacon_type_v1_type_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeaconBlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_beacon_type_v1_type_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sf_beacon_type_v1_type_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Block_Phase0)(nil),
		(*Block_Deneb)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sf_beacon_type_v1_type_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sf_beacon_type_v1_type_proto_goTypes,
		DependencyIndexes: file_sf_beacon_type_v1_type_proto_depIdxs,
		EnumInfos:         file_sf_beacon_type_v1_type_proto_enumTypes,
		MessageInfos:      file_sf_beacon_type_v1_type_proto_msgTypes,
	}.Build()
	File_sf_beacon_type_v1_type_proto = out.File
	file_sf_beacon_type_v1_type_proto_rawDesc = nil
	file_sf_beacon_type_v1_type_proto_goTypes = nil
	file_sf_beacon_type_v1_type_proto_depIdxs = nil
}
